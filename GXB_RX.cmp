	component GXB_RX is
		port (
			rx_analogreset          : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- rx_analogreset
			rx_digitalreset         : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- rx_digitalreset
			rx_cdr_refclk           : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- rx_cdr_refclk
			rx_serial_data          : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- rx_serial_data
			rx_std_coreclkin        : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- rx_std_coreclkin
			rx_std_clkout           : out std_logic_vector(3 downto 0);                      -- rx_std_clkout
			rx_cal_busy             : out std_logic_vector(3 downto 0);                      -- rx_cal_busy
			reconfig_to_xcvr        : in  std_logic_vector(279 downto 0) := (others => 'X'); -- reconfig_to_xcvr
			reconfig_from_xcvr      : out std_logic_vector(183 downto 0);                    -- reconfig_from_xcvr
			rx_parallel_data        : out std_logic_vector(63 downto 0);                     -- rx_parallel_data
			rx_datak                : out std_logic_vector(7 downto 0);                      -- rx_datak
			rx_errdetect            : out std_logic_vector(7 downto 0);                      -- rx_errdetect
			rx_disperr              : out std_logic_vector(7 downto 0);                      -- rx_disperr
			rx_runningdisp          : out std_logic_vector(7 downto 0);                      -- rx_runningdisp
			rx_patterndetect        : out std_logic_vector(7 downto 0);                      -- rx_patterndetect
			rx_syncstatus           : out std_logic_vector(7 downto 0);                      -- rx_syncstatus
			unused_rx_parallel_data : out std_logic_vector(143 downto 0)                     -- unused_rx_parallel_data
		);
	end component GXB_RX;

